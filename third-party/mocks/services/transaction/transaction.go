// Code generated by MockGen. DO NOT EDIT.
// Source: services/transaction/transaction.go

// Package transaction_mock is a generated GoMock package.
package transaction_mock

import (
	reflect "reflect"
	models "third-party/models"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionService is a mock of TransactionService interface.
type MockTransactionService struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionServiceMockRecorder
}

// MockTransactionServiceMockRecorder is the mock recorder for MockTransactionService.
type MockTransactionServiceMockRecorder struct {
	mock *MockTransactionService
}

// NewMockTransactionService creates a new mock instance.
func NewMockTransactionService(ctrl *gomock.Controller) *MockTransactionService {
	mock := &MockTransactionService{ctrl: ctrl}
	mock.recorder = &MockTransactionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionService) EXPECT() *MockTransactionServiceMockRecorder {
	return m.recorder
}

// CreatePaymentTransaction mocks base method.
func (m *MockTransactionService) CreatePaymentTransaction(accountId, reference string, amount float64) (models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePaymentTransaction", accountId, reference, amount)
	ret0, _ := ret[0].(models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePaymentTransaction indicates an expected call of CreatePaymentTransaction.
func (mr *MockTransactionServiceMockRecorder) CreatePaymentTransaction(accountId, reference, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePaymentTransaction", reflect.TypeOf((*MockTransactionService)(nil).CreatePaymentTransaction), accountId, reference, amount)
}

// GetPaymentTransaction mocks base method.
func (m *MockTransactionService) GetPaymentTransaction(reference string) (models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentTransaction", reference)
	ret0, _ := ret[0].(models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentTransaction indicates an expected call of GetPaymentTransaction.
func (mr *MockTransactionServiceMockRecorder) GetPaymentTransaction(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentTransaction", reflect.TypeOf((*MockTransactionService)(nil).GetPaymentTransaction), reference)
}
