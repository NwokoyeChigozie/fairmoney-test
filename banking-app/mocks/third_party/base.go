// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/third-party/base.go

// Package third_party_mock is a generated GoMock package.
package third_party_mock

import (
	third_party "banking-app/pkg/third-party"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockThirdPartyPkg is a mock of ThirdPartyPkg interface.
type MockThirdPartyPkg struct {
	ctrl     *gomock.Controller
	recorder *MockThirdPartyPkgMockRecorder
}

// MockThirdPartyPkgMockRecorder is the mock recorder for MockThirdPartyPkg.
type MockThirdPartyPkgMockRecorder struct {
	mock *MockThirdPartyPkg
}

// NewMockThirdPartyPkg creates a new mock instance.
func NewMockThirdPartyPkg(ctrl *gomock.Controller) *MockThirdPartyPkg {
	mock := &MockThirdPartyPkg{ctrl: ctrl}
	mock.recorder = &MockThirdPartyPkgMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockThirdPartyPkg) EXPECT() *MockThirdPartyPkgMockRecorder {
	return m.recorder
}

// CreateTransaction mocks base method.
func (m *MockThirdPartyPkg) CreateTransaction(accountId, reference string, amount float64) (*third_party.ThirdPartyPackageResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransaction", accountId, reference, amount)
	ret0, _ := ret[0].(*third_party.ThirdPartyPackageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTransaction indicates an expected call of CreateTransaction.
func (mr *MockThirdPartyPkgMockRecorder) CreateTransaction(accountId, reference, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockThirdPartyPkg)(nil).CreateTransaction), accountId, reference, amount)
}

// GetTransaction mocks base method.
func (m *MockThirdPartyPkg) GetTransaction(reference string) (*third_party.ThirdPartyPackageResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransaction", reference)
	ret0, _ := ret[0].(*third_party.ThirdPartyPackageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransaction indicates an expected call of GetTransaction.
func (mr *MockThirdPartyPkgMockRecorder) GetTransaction(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransaction", reflect.TypeOf((*MockThirdPartyPkg)(nil).GetTransaction), reference)
}
